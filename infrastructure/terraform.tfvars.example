# ==============================================================================
# Dead Man's Switch (KeyFate) - Terraform Configuration Template
# ==============================================================================
# This file contains ALL required variables for deploying KeyFate infrastructure.
# Copy this file to your environment-specific directory as terraform.tfvars
# and fill in the appropriate values for your deployment.
#
# Security Notice:
# - This template contains examples and placeholders only
# - Never commit real secrets to version control
# - Use environment-specific terraform.tfvars files (gitignored)
#
# File Locations:
# - infrastructure/terragrunt/dev/terraform.tfvars (staging environment)
# - infrastructure/terragrunt/prod/terraform.tfvars (production environment)
# ==============================================================================

# ==============================================================================
# ORGANIZATION & BILLING CONFIGURATION
# ==============================================================================
# Get these values from your Google Cloud Organization
organization_id = "YOUR_ORG_ID_HERE"              # Google Cloud Organization ID
folder_id       = "YOUR_FOLDER_ID_HERE"           # Google Cloud Folder ID
billing_account = "YOUR_BILLING_ACCOUNT_HERE"     # Format: XXXXXX-XXXXXX-XXXXXX

# ==============================================================================
# ENVIRONMENT CONFIGURATION
# ==============================================================================
env    = "staging"                    # Environment: "staging" or "production"
region = "us-central1"               # GCP region for resource deployment

# ==============================================================================
# INFRASTRUCTURE SETTINGS
# ==============================================================================
# Enable deletion protection for production (prevent accidental resource deletion)
deletion_protection = false          # Set to true for production environments

# Resource labeling for cost tracking and organization
labels = {
  environment = "staging"
  project     = "keyfate"
  managed-by  = "terraform"
}

# ==============================================================================
# CLOUD RUN APPLICATION CONFIGURATION
# ==============================================================================
# Performance and scaling settings
cpu_limit             = "1000m"      # CPU allocation (1000m = 1 CPU)
memory_limit          = "512Mi"      # Memory allocation
cpu_boost             = true         # Enable CPU boost for faster cold starts
max_instances         = 10           # Maximum concurrent instances
min_instances         = 0            # Minimum instances (0 = scale to zero)
allow_unauthenticated = true         # Allow public access to the application

# Custom domain configuration (optional)
custom_domain = "staging.keyfate.com"  # Leave empty for default Cloud Run domain

# ==============================================================================
# PUBLIC ENVIRONMENT VARIABLES (NEXT_PUBLIC_*)
# ==============================================================================
# These values are included in the client-side JavaScript bundle
next_public_site_url               = "https://staging.keyfate.com"
next_public_company                = "KeyFate"
next_public_parent_company         = "Your Company Name"
next_public_support_email          = "support@yourcompany.com"
next_public_auth_provider          = "google"          # Authentication provider
next_public_database_provider      = "cloudsql"       # Database provider identifier

# ==============================================================================
# STRIPE PAYMENT CONFIGURATION
# ==============================================================================
# Stripe public key (safe to expose in client-side code)
next_public_stripe_publishable_key = "pk_test_YOUR_STRIPE_PUBLISHABLE_KEY_HERE"

# Stripe secret key (SENSITIVE - server-side only)
stripe_secret_key = "sk_test_YOUR_STRIPE_SECRET_KEY_HERE"

# ==============================================================================
# SENSITIVE SECRETS (KEEP SECURE)
# ==============================================================================

# ------------------------------------------------------------------------------
# DATABASE CONFIGURATION
# ------------------------------------------------------------------------------
# This will be auto-generated by the cloudsql.tf module, but you can override
# Format: postgresql://username:password@host:port/database?sslmode=require
db_url = "postgresql://keyfate_app:AUTO_GENERATED@PRIVATE_IP:5432/keyfate?sslmode=require"

# ------------------------------------------------------------------------------
# ENCRYPTION & JWT SECRETS
# ------------------------------------------------------------------------------
# Generate with: openssl rand -base64 32
encryption_key = "GENERATE_32_BYTE_BASE64_KEY_HERE"

# Generate with: openssl rand -base64 32
nextauth_secret = "GENERATE_32_BYTE_BASE64_KEY_HERE"

# Database password for Cloud SQL user
# Generate with: openssl rand -base64 32
db_password = "GENERATE_32_BYTE_BASE64_KEY_HERE"

# ------------------------------------------------------------------------------
# GOOGLE OAUTH CONFIGURATION
# ------------------------------------------------------------------------------
# Create OAuth credentials at: https://console.cloud.google.com/apis/credentials
google_client_id     = "YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com"
google_client_secret = "GOCSPX-YOUR_GOOGLE_CLIENT_SECRET"

# ------------------------------------------------------------------------------
# BTCPAY SERVER CONFIGURATION (if using Bitcoin payments)
# ------------------------------------------------------------------------------
# External BTCPay Server URL (if self-hosting or using third-party)
btcpay_server_url = "https://btcpay.yourcompany.com"

# BTCPay API credentials (generate in BTCPay Server admin panel)
btcpay_api_key        = "YOUR_BTCPAY_API_KEY_HERE"
btcpay_store_id       = "YOUR_BTCPAY_STORE_ID_HERE"
btcpay_webhook_secret = "YOUR_BTCPAY_WEBHOOK_SECRET_HERE"

# ==============================================================================
# LEGACY SUPABASE VARIABLES (DEPRECATED)
# ==============================================================================
# These are maintained for backward compatibility during migration
# TODO: Remove after completing migration to Cloud SQL
next_public_supabase_url = ""          # Leave empty for new deployments
supabase_service_role_key = ""         # Leave empty for new deployments

# ==============================================================================
# VARIABLE DEFINITIONS AND SECURITY NOTES
# ==============================================================================
#
# VARIABLE TYPES:
# - Public Variables (next_public_*): Exposed in client-side code, not sensitive
# - Secret Variables: Server-side only, marked as sensitive in variables.tf
#
# SECURITY REQUIREMENTS:
# - All sensitive variables are stored in Google Secret Manager
# - Terraform state is encrypted and stored in Google Cloud Storage
# - Service accounts use least-privilege IAM roles
# - Database uses private IP connectivity only
#
# GENERATION COMMANDS:
# - Random secrets: openssl rand -base64 32
# - JWT secrets: openssl rand -base64 32
# - Database passwords: Auto-generated by Terraform (see cloudsql.tf)
#
# DEPLOYMENT ENVIRONMENTS:
# - Staging: Use test API keys and lower resource limits
# - Production: Use live API keys and production resource limits
# - Development: Local environment variables or Cloud SQL Proxy
#
# ==============================================================================
