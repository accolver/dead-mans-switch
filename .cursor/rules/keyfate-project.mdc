---
description: KeyFate Dead Mans Switch Platform - Core project rules and architecture
globs: ["**/*"]
alwaysApply: true
---
# KeyFate: Dead Man's Switch Platform

Keyfate is a managed "dead-man's switch" service. Users can securely create secrets that will be automatically sent to a trusted recipient if the user fails to check-in within the determined time interval.

## Core Security Principles
- Secrets split using Shamir's Secret Sharing entirely in browser
- Original secrets NEVER leave user's device
- Server only stores one encrypted share (cannot reconstruct alone)
- Requires at least 2 shares for secret reconstruction

## Key Technologies
- Frontend: Next.js App Router, React, TailwindCSS, Shadcn/UI
- Backend: Supabase (Postgres, Auth, Edge Functions)
- Security: Client-side Shamir's Secret Sharing (2-of-3 threshold)

## Development Guidelines
- All secrets handling must be client-side only
- Server share must always be encrypted before storage
- Test coverage required for all new features
- Maintain security-first mindset in all decisions

## Design Principles
- Modern, sleek, and extremly user friendly
- Security of the user's secrets is paramount
- Mobile responsive
